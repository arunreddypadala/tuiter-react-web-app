{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport tuits from './tuits.json';\nconst currentUser = {\n  \"userName\": \"NASA\",\n  \"handle\": \"@nasa\",\n  \"image\": \"nasa.png\"\n};\nconst templateTuit = {\n  ...currentUser,\n  \"topic\": \"Space\",\n  \"time\": \"2h\",\n  \"liked\": false,\n  \"replies\": 0,\n  \"retuits\": 0,\n  \"likes\": 0\n};\nconst tuitsSlice = createSlice({\n  name: 'tuits',\n  initialState: tuits,\n  reducers: {\n    deleteTuit(state, action) {\n      const index = state.findIndex(tuit => tuit._id === action.payload);\n      state.splice(index, 1);\n    },\n    createTuit(state, action) {\n      state.unshift({\n        ...action.payload,\n        ...templateTuit,\n        _id: new Date().getTime()\n      });\n    }\n  }\n});\nexport const {\n  createTuit,\n  deleteTuit\n} = tuitsSlice.actions;\nexport default tuitsSlice.reducer;","map":{"version":3,"names":["createSlice","tuits","currentUser","templateTuit","tuitsSlice","name","initialState","reducers","deleteTuit","state","action","index","findIndex","tuit","_id","payload","splice","createTuit","unshift","Date","getTime","actions","reducer"],"sources":["/Users/arunkumarreddy/Documents/cs5610_7/2023/spring/webdev/tuiter-react-web-app/src/tuiter/tuits/tuits-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport tuits from './tuits.json';\n\nconst currentUser = {\n    \"userName\": \"NASA\",\n    \"handle\": \"@nasa\",\n    \"image\": \"nasa.png\",\n};\n\nconst templateTuit = {\n    ...currentUser,\n    \"topic\": \"Space\",\n    \"time\": \"2h\",\n    \"liked\": false,\n    \"replies\": 0,\n    \"retuits\": 0,\n    \"likes\": 0,\n}\n\nconst tuitsSlice = createSlice({\n                                   name: 'tuits',\n                                   initialState: tuits,\n                                   reducers: {\n                                       deleteTuit(state, action) {\n                                           const index = state\n                                               .findIndex(tuit =>\n                                                              tuit._id === action.payload);\n                                           state.splice(index, 1);\n                                       },\n                                       createTuit(state, action) {\n                                           state.unshift({\n                                                             ...action.payload,\n                                                             ...templateTuit,\n                                                             _id: (new Date()).getTime(),\n                                                         })\n                                       }\n                                   }\n                               });\nexport const {createTuit, deleteTuit} = tuitsSlice.actions;\nexport default tuitsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,cAAc;AAEhC,MAAMC,WAAW,GAAG;EAChB,UAAU,EAAE,MAAM;EAClB,QAAQ,EAAE,OAAO;EACjB,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,YAAY,GAAG;EACjB,GAAGD,WAAW;EACd,OAAO,EAAE,OAAO;EAChB,MAAM,EAAE,IAAI;EACZ,OAAO,EAAE,KAAK;EACd,SAAS,EAAE,CAAC;EACZ,SAAS,EAAE,CAAC;EACZ,OAAO,EAAE;AACb,CAAC;AAED,MAAME,UAAU,GAAGJ,WAAW,CAAC;EACIK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEL,KAAK;EACnBM,QAAQ,EAAE;IACNC,UAAU,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMC,KAAK,GAAGF,KAAK,CACdG,SAAS,CAACC,IAAI,IACAA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO,CAAC;MAC/CN,KAAK,CAACO,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IAC1B,CAAC;IACDM,UAAU,CAACR,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACS,OAAO,CAAC;QACI,GAAGR,MAAM,CAACK,OAAO;QACjB,GAAGZ,YAAY;QACfW,GAAG,EAAG,IAAIK,IAAI,EAAE,CAAEC,OAAO;MAC7B,CAAC,CAAC;IACpB;EACJ;AACJ,CAAC,CAAC;AACjC,OAAO,MAAM;EAACH,UAAU;EAAET;AAAU,CAAC,GAAGJ,UAAU,CAACiB,OAAO;AAC1D,eAAejB,UAAU,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}